2. Посчитайте сложность функции
Вычислите асимптотическую сложность функции из примера ниже. 


public static int  StrangeSum(int[] inputArray)
{
   int sum = 0; // O(1) этим присвоением int будем пренебрегать - он выполнится всего один раз
   
   for (int i = 0; i < inputArray.Length; i++) 			// O(i(inputArray.Length))
   {
       for (int j = 0; j < inputArray.Length; j++) 		// O(j(inputArray.Length))
       {
           for (int k = 0; k < inputArray.Length; k++) 	// O(k(inputArray.Length)) 		   
														//правило 4 = O( i(inputArray.Length) × j(inputArray.Length) × k(inputArray.Length) ) = O(inputArray.Length в кубе)
           
		   {
               int y = 0;		// O(1)

               if (j != 0)		// O(1) будет срабатывать практически всегда, т.к. J равно нулю только 1 раз на старте цикла.
               {
                   y = k / j; 	// O(1)
               }

               sum += inputArray[i] + i + k + j + y; // O(6) шесть слагаемых( sum + inputArray[i] + i + k + j + y)
           }
       }
   }

   return sum; // O(1) оператором return будем пренебрегать - он выполнится всего один раз
}
							// итого внутри циклов выполняется  О(9) операций
							// и если принять inputArray.Length как N
							// то сложность равна O(9N в кубе).
							
